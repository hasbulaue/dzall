Структура проекта
Проект разбит на модули через Blueprints для удобства организации кода. Каждый модуль отвечает за свою часть функциональности - пользователи, посты, админка. Модули регистрируются в основном приложении через специальную функцию.
Базы данных
Для работы с базой данных используется Flask-SQLAlchemy. Это позволяет работать с базой данных как с Python-объектами. Связи между таблицами объявляются через специальные поля - например, связь между пользователем и его постами.
Аутентификация
Вход и выход пользователя реализован через библиотеку Flask-Login. При входе система запоминает пользователя, при выходе - забывает. Защищенные страницы помечаются специальным декоратором.
Формы
Валидация данных организована через WTForms. Для каждого поля можно указать правила проверки - например, что поле обязательно для заполнения, или что email должен быть правильного формата, или что пароль должен быть определенной длины.
Шаблоны
Наследование шаблонов работает через базовый шаблон, от которого наследуются все остальные. Это позволяет иметь общий дизайн для всех страниц - шапку, меню, подвал, а в дочерних шаблонах менять только основное содержимое.
Безопасность
Пароли пользователей защищены хешированием - в базе хранятся не сами пароли, а их хеши. Защита от CSRF-атак обеспечивается автоматически через скрытые поля в формах.
Жизненный цикл запроса
Когда пользователь переходит на главную страницу, запрос поступает в приложение, находит нужную функцию для обработки главной страницы, та в свою очередь готовит данные и отдает шаблон, который рендерится в готовую HTML-страницу и отправляется обратно пользователю.